load("@fbcode_macros//build_defs:python_binary.bzl", "python_binary")
load("@fbcode_macros//build_defs:python_library.bzl", "python_library")
load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load("@fbcode_macros//build_defs:custom_rule.bzl", "custom_rule")
load("@fbcode_macros//build_defs:native_rules.bzl", "buck_sh_binary")

buck_sh_binary(
    name = "generate_parser",
    main = "generate_parser.sh"
)

GENERATED_FILES = [
        "gen/SimpleNode.cc",
        "gen/IntervalLiteral.cc",
        "gen/QuantifiedComparison.cc",
        "gen/Values.cc",
        "gen/WhereClause.cc",
        "gen/SecondField.cc",
        "gen/AndExpression.cc",
        "gen/UseStatement.cc",
        "gen/InvalueList.cc",
        "gen/FilterClause.cc",
        "gen/MultiplicativeExpression.cc",
        "gen/CompilationUnit.cc",
        "gen/CharStringLiteral.cc",
        "gen/TimestampLiteral.cc",
        "gen/UsingClause.cc",
        "gen/CurrentRow.cc",
        "gen/NonSecondDateTimeField.cc",
        "gen/SchemaQualifiedName.cc",
        "gen/InPredicate.cc",
        "gen/ArrayLiteral.cc",
        "gen/AliasedTable.cc",
        "gen/WhenOperand.cc",
        "gen/LanguageClause.cc",
        "gen/ElseClause.cc",
        "gen/Concatenation.cc",
        "gen/RowExression.cc",
        "gen/WindowFrameBetween.cc",
        "gen/NullLiteral.cc",
        "gen/WindowFrameFollowing.cc",
        "gen/TimeLiteral.cc",
        "gen/OrderingDirection.cc",
        "gen/BuiltinValue.cc",
        "gen/Subquery.cc",
        "gen/QuerySpecification.cc",
        "gen/OrderByClause.cc",
        "gen/LambdaParams.cc",
        "gen/UnboundedFollowing.cc",
        "gen/Star.cc",
        "gen/Comparison.cc",
        "gen/CastEpression.cc",
        "gen/SelectItem.cc",
        "gen/Unsupported.cc",
        "gen/FunctionCall.cc",
        "gen/ParenthesizedExpression.cc",
        "gen/FieldReference.cc",
        "gen/InvervalQualifier.cc",
        "gen/Join.cc",
        "gen/TryExpression.cc",
        "gen/CommaJoin.cc",
        "gen/FromClause.cc",
        "gen/Cube.cc",
        "gen/HavingClause.cc",
        "gen/AdditiveEpression.cc",
        "gen/NonSecondField.cc",
        "gen/NullOrdering.cc",
        "gen/Select.cc",
        "gen/TimeZoneField.cc",
        "gen/CatalogName.cc",
        "gen/DateLiteral.cc",
        "gen/FieldDefinition.cc",
        "gen/WindowFrameExtent.cc",
        "gen/OrExpression.cc",
        "gen/CaseExpression.cc",
        "gen/MapType.cc",
        "gen/ArrayType.cc",
        "gen/OnClause.cc",
        "gen/WindowFunction.cc",
        "gen/WhenClause.cc",
        "gen/SortSpecificationList.cc",
        "gen/Identifier.cc",
        "gen/GroupbyClause.cc",
        "gen/Like.cc",
        "gen/NullIf.cc",
        "gen/GroupingOperation.cc",
        "gen/NamedArgument.cc",
        "gen/ArrayElement.cc",
        "gen/GroupingSets.cc",
        "gen/LimitClause.cc",
        "gen/Unused.cc",
        "gen/QualifiedName.cc",
        "gen/Between.cc",
        "gen/ArgumentList.cc",
        "gen/Coalesce.cc",
        "gen/NullTreatment.cc",
        "gen/TableName.cc",
        "gen/IsExpression.cc",
        "gen/WindowFrameUnits.cc",
        "gen/UnsignedNumericLiteral.cc",
        "gen/CastExpression.cc",
        "gen/PartitionByClause.cc",
        "gen/CreateSchema.cc",
        "gen/SelectList.cc",
        "gen/ColumnNames.cc",
        "gen/Rollup.cc",
        "gen/BooleanLiteral.cc",
        "gen/SetQuantifier.cc",
        "gen/SearchedCaseOperand.cc",
        "gen/UnaryExpression.cc",
        "gen/NotExpression.cc",
        "gen/TableExpression.cc",
        "gen/AggregationFunction.cc",
        "gen/UnboundedPreceding.cc",
        "gen/IsDistinct.cc",
        "gen/Unnest.cc",
        "gen/Lambda.cc",
        "gen/SetOperation.cc",
        "gen/Unsuppoerted.cc",
        "gen/RowExpression.cc",
        "gen/TableSample.cc",
        "gen/LambdaBody.cc",
        "gen/Cte.cc",
        "gen/SortSpecification.cc",
        "gen/Alias.cc",
        "gen/Exists.cc",
        "gen/WindowFramePreceding.cc",
        "gen/IsNull.cc",
        "gen/SchemaName.cc",
        "gen/WithClause.cc",
        "gen/JJTSqlParserState.cc",
        "gen/SqlParser.cc",
        "gen/SqlParserTokenManager.cc",
        "gen/CharStream.cc",
        "gen/Token.cc",
        "gen/TokenMgrError.cc",
        "gen/ParseException.cc",
  ]

custom_rule(
  name = "gen",
  srcs = glob([ "*.txt", "javacc/javacc.jar" ]),
  output_gen_files = GENERATED_FILES,
  build_script_dep = ":generate_parser",
)

cpp_library(
    name = "sqlparser",
    deps = [ ":gen" ],
    srcs = 
        glob(["ParseErrorHandler.cc"]) +
        #[":gen=" + x for x in GENERATED_FILES]
        [":gen"]
)

#cpp_binary(
    #name = "parser_test",
    #srcs = [
        #"main.cc"
    #],
    #deps = [
        #":sqlparser"
    #],
#)
