<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.facebook.presto</groupId>
        <artifactId>presto-coresql</artifactId>
        <version>0.2-SNAPSHOT</version>
    </parent>

    <artifactId>presto-coresql-parser</artifactId>
    <name>presto-coresql-parser</name>

    <properties>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.8.1</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.1</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>configuration</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bootstrap</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/hu.webarticum/tree-printer -->
        <dependency>
            <groupId>hu.webarticum</groupId>
            <artifactId>tree-printer</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>Build-parser</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>./prepare-javacc-grammar.sh</executable>
                    <basedir>grammar</basedir>
                    <workingDirectory>grammar</workingDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.javacc.plugin</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>3.0.3</version>
                <executions>
                    <execution>
                        <id>jcc7jcc</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>jjtree-javacc</goal>
                        </goals>
                        <configuration>
                            <outputLanguage>java</outputLanguage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.facebook.presto</groupId>
                <artifactId>presto-maven-plugin</artifactId>
                <version>0.3</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <plugin>
                <groupId>org.skife.maven</groupId>
                <artifactId>really-executable-jar-maven-plugin</artifactId>
                <version>1.0.5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <preparationGoals>clean verify -DskipTests</preparationGoals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration combine.children="append">
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-verbose</arg>
                        <arg>-J-Xss100M</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.conditions.deactivate = *
                            junit.jupiter.extensions.autodetection.enabled = true
                            junit.jupiter.testinstance.lifecycle.default = per_class
                            junit.jupiter.execution.parallel.enabled = true
                        </configurationParameters>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration combine.children="append">
                    <trimStackTrace>true</trimStackTrace>
                    <includes>
                        <include>**/*.java</include>
                        <include>target/**/*.java</include>
                        <include>**/Benchmark*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*jmhTest*.java</exclude>
                        <exclude>**/*jmhType*.java</exclude>
                        <!-- those shall be handled by the FAIL SAFE plugin only -->
                        <exclude>**/*TestIT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Always build a jar with the test classes -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- do not build an empty jar if the project is
                         e.g. a pom project -->
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>false</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <useNativeGit>true</useNativeGit>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.javacc.plugin</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>net.java.dev.javacc</groupId>
                            <artifactId>javacc</artifactId>
                            <version>7.0.12</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>2.1.0</version>
                    <configuration>
                        <javaVersion>1.8</javaVersion>
                        <ignorePackages>com.facebook.coresql.parser</ignorePackages>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <reporting>
        <plugins>
            <!-- JJDoc report generating the BNF documentation -->
            <plugin>
                <groupId>org.javacc.plugin</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>3.0.3</version>
                <configuration>
                    <!-- 
                    /**
                    * A flag to specify the output format for the generated documentation. If set to <code>true</code>, JJDoc will
                    * generate a plain text description of the BNF. Some formatting is done via tab characters, but the intention is to
                    * leave it as plain as possible. Specifying <code>false</code> causes JJDoc to generate a hyperlinked HTML document
                    * unless the parameter {@link #bnf} has been set to <code>true</code>. Default value is <code>false</code>.
                    * 
                    * @parameter expression="${text}"
                    */
                    -->
                    <text>true</text>
                    
                    <!--
                    /**
                    * A flag whether to generate a plain text document with the unformatted BNF. Note that setting this option to
                    * <code>true</code> is only effective if the parameter {@link #text} is <code>false</code>. Default value is
                    * <code>false</code>.
                    * 
                    * @parameter expression="${bnf}"
                    * @since 2.6
                    */
                    -->
                    <bnf>true</bnf>
                    
                    <!--
                    /**
                    * This option controls the structure of the generated HTML output. If set to <code>true</code>, a single HTML
                    * table for the entire BNF is generated. Setting it to <code>false</code> will produce one table for every
                    * production in the grammar.
                    * 
                    * @parameter expression="${oneTable}" default-value=true
                    */
                    -->
                    <oneTable>false</oneTable>
                    
                    <!--
                    /**
                    * The hypertext reference to an optional CSS file for the generated HTML documents. If specified, this CSS file
                    * will be included via a <code>&lt;link&gt;</code> element in the HTML documents. Otherwise, the default style will
                    * be used.
                    * 
                    * @parameter expression="${cssHref}"
                    * @since 2.5
                    */            
                    -->
                    <!-- <cssHref></cssHref> -->
                    
                    <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
